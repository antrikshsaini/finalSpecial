{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/antrix/Documents/College Term 4/special-topics/finalSpecial/client/src/components/lists/People.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useQuery } from '@apollo/client';\nimport { GET_BOAT, GET_PEOPLE } from '../../queries';\nimport { List } from 'antd';\nimport Person from '../listItems/Person';\n\nconst getStyles = () => ({\n  list: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n});\n\nconst People = () => {\n  _s();\n\n  const styles = getStyles();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(GET_PEOPLE);\n  if (loading) return 'Loading...';\n  if (error) return `Errror! ${error.message}`;\n  const {\n    loadingBoat,\n    errorBoat,\n    boatData\n  } = useQuery(GET_BOAT);\n  if (loadingBoat) return 'Loading...';\n  if (errorBoat) return `Errror! ${errorBoat.message}`;\n  return /*#__PURE__*/_jsxDEV(List, {\n    grid: {\n      gutter: 20,\n      column: 1\n    },\n    style: styles.list,\n    children: data.people.map(({\n      id,\n      firstName,\n      lastName\n    }) => /*#__PURE__*/_jsxDEV(List.Item, {\n      children: [/*#__PURE__*/_jsxDEV(Person, {\n        id: id,\n        firstName: firstName,\n        lastName: lastName\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        grid: {\n          gutter: 20,\n          column: 1\n        },\n        style: styles.list,\n        children: boatData.boat.map(({\n          id,\n          year,\n          make,\n          model,\n          price,\n          personId\n        }) => /*#__PURE__*/_jsxDEV(List.Item, {\n          children: /*#__PURE__*/_jsxDEV(Boat, {\n            id: id,\n            year: year,\n            make: make,\n            model: model,\n            price: price,\n            personId: personId\n          }, id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 19\n          }, this)\n        }, id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this)]\n    }, id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(People, \"c5qby4CjtlC9UrETPMJbnnTKCmA=\", false, function () {\n  return [useQuery, useQuery];\n});\n\n_c = People;\nexport default People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["/Users/antrix/Documents/College Term 4/special-topics/finalSpecial/client/src/components/lists/People.js"],"names":["React","useQuery","GET_BOAT","GET_PEOPLE","List","Person","getStyles","list","display","justifyContent","People","styles","loading","error","data","message","loadingBoat","errorBoat","boatData","gutter","column","people","map","id","firstName","lastName","boat","year","make","model","price","personId"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,QAAT,EAAmBC,UAAnB,QAAqC,eAArC;AAEA,SAASC,IAAT,QAAqB,MAArB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;;AAEA,MAAMC,SAAS,GAAG,OAAO;AACvBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,OAAO,EAAE,MADL;AAEJC,IAAAA,cAAc,EAAE;AAFZ;AADiB,CAAP,CAAlB;;AAOA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAMC,MAAM,GAAGL,SAAS,EAAxB;AAEA,QAAM;AAAEM,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bb,QAAQ,CAACE,UAAD,CAAzC;AACA,MAAIS,OAAJ,EAAa,OAAO,YAAP;AACb,MAAIC,KAAJ,EAAW,OAAQ,WAAUA,KAAK,CAACE,OAAQ,EAAhC;AACX,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,SAAf;AAA0BC,IAAAA;AAA1B,MAAuCjB,QAAQ,CAACC,QAAD,CAArD;AACA,MAAIc,WAAJ,EAAiB,OAAO,YAAP;AACjB,MAAIC,SAAJ,EAAe,OAAQ,WAAUA,SAAS,CAACF,OAAQ,EAApC;AACf,sBACE,QAAC,IAAD;AAAM,IAAA,IAAI,EAAE;AAAEI,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,MAAM,EAAE;AAAtB,KAAZ;AAAuC,IAAA,KAAK,EAAET,MAAM,CAACJ,IAArD;AAAA,cACGO,IAAI,CAACO,MAAL,CAAYC,GAAZ,CAAgB,CAAC;AAAEC,MAAAA,EAAF;AAAMC,MAAAA,SAAN;AAAiBC,MAAAA;AAAjB,KAAD,kBACf,QAAC,IAAD,CAAM,IAAN;AAAA,8BACE,QAAC,MAAD;AAAiB,QAAA,EAAE,EAAEF,EAArB;AAAyB,QAAA,SAAS,EAAEC,SAApC;AAA+C,QAAA,QAAQ,EAAEC;AAAzD,SAAaF,EAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAE;AAAEJ,UAAAA,MAAM,EAAE,EAAV;AAAcC,UAAAA,MAAM,EAAE;AAAtB,SAAZ;AAAuC,QAAA,KAAK,EAAET,MAAM,CAACJ,IAArD;AAAA,kBACGW,QAAQ,CAACQ,IAAT,CAAcJ,GAAd,CAAkB,CAAC;AAAEC,UAAAA,EAAF;AAAMI,UAAAA,IAAN;AAAYC,UAAAA,IAAZ;AAAkBC,UAAAA,KAAlB;AAAyBC,UAAAA,KAAzB;AAAgCC,UAAAA;AAAhC,SAAD,kBACf,QAAC,IAAD,CAAM,IAAN;AAAA,iCACE,QAAC,IAAD;AAAe,YAAA,EAAE,EAAER,EAAnB;AAAuB,YAAA,IAAI,EAAEI,IAA7B;AAAmC,YAAA,IAAI,EAAEC,IAAzC;AAA+C,YAAA,KAAK,EAAEC,KAAtD;AAA6D,YAAA,KAAK,EAAEC,KAApE;AAA2E,YAAA,QAAQ,EAAGC;AAAtF,aAAWR,EAAX;AAAA;AAAA;AAAA;AAAA;AADF,WAAkBA,EAAlB;AAAA;AAAA;AAAA;AAAA,gBADH;AADH;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA,OAAgBA,EAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAzBD;;GAAMb,M;UAG6BT,Q,EAGYA,Q;;;KANzCS,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React from 'react'\nimport { useQuery } from '@apollo/client'\nimport { GET_BOAT, GET_PEOPLE } from '../../queries'\n\nimport { List } from 'antd'\n\nimport Person from '../listItems/Person'\n\nconst getStyles = () => ({\n  list: {\n    display: 'flex',\n    justifyContent: 'center'\n  }\n})\n\nconst People = () => {\n  const styles = getStyles()\n\n  const { loading, error, data } = useQuery(GET_PEOPLE)\n  if (loading) return 'Loading...'\n  if (error) return `Errror! ${error.message}`\n  const { loadingBoat, errorBoat, boatData } = useQuery(GET_BOAT)\n  if (loadingBoat) return 'Loading...'\n  if (errorBoat) return `Errror! ${errorBoat.message}`\n  return (\n    <List grid={{ gutter: 20, column: 1 }} style={styles.list}>\n      {data.people.map(({ id, firstName, lastName }) => (\n        <List.Item key={id}>\n          <Person key={id} id={id} firstName={firstName} lastName={lastName} />\n          <List grid={{ gutter: 20, column: 1 }} style={styles.list}>\n            {boatData.boat.map(({ id, year, make, model, price, personId }) => (\n                <List.Item key = {id}>\n                  <Boat key={id} id={id} year={year} make={make} model={model} price={price} personId= {personId} />\n                </List.Item>\n            ))}\n          </List>\n        </List.Item>\n      ))}\n    </List>\n  )\n}\n\nexport default People\n"]},"metadata":{},"sourceType":"module"}